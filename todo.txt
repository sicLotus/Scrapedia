TODO
---------------------------------------------------------------------
- Bessere Instanz für Neo4J - SSD?

- %-Zeichen ist in Cypherquery unknown bzw. wird als Befehl erkannt

- Statistik abfrage
	skript über REST via Ruby das statistiken ausliest, als Datei speichern
	über sinatra daten aus der datei auslesen

- Verteilung auf mehrere Instanzen
	Skript zum Anlegen und Verteilen schreiben?

- Kostenberechnung, auf einer besseren Instanz mehrere Skripts parallel oder mehrere kleinere Instanzen?
	Zeitgewinn auf schnellerer Instanz? - 1000 Einträge aus Redis Zeitmessung

- Was machen wir mit der Fehlerliste?! Verwaltungsskript für die wikiFailures (auf worker instanz)

- Github anlegen

- Ausgabe der Ergebnisse
	Cypherskripte
	Sinatra?
	
- Bei Abbruch eines Skripts möglichst diesen Node in die Fehlerlist aufnehmen/überprüfen
	Was machen wenn Redis, Neo4J oder Wikipedia down sind? Dann werden alle Einträge einfach in die Fehlerliste
	gepusht - und was dann?

- Redis Instanz Secury Copy : sowie neo4j
	Wenn Redis abbricht, was dann? Backup

Done
---------------------------------------------------------------------
Neo4J als Embedded Database (für SEHR viel bessere Performance - nach Aussage von Nutzer :p) (done)
Mit Java:
http://docs.neo4j.org/chunked/snapshot/tutorials-java-embedded.html
(auch via SPRING: http://static.springsource.org/spring-data/data-neo4j/docs/current/reference/html/ )

Mit Python:
http://docs.neo4j.org/chunked/snapshot/tutorials-python-embedded.html

Mit JRuby:
https://github.com/andreasronge/neo4j 
[kann man testen, scheint aber noch unausgereift]


1. alle artikel zu redis
2. artikel scrapen

